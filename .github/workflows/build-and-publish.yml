name: Build and Publish Docker Image

on:
  push:
    branches:
      - master

jobs:
  build-and-publish:
    environment: Production
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Install Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker Image
        run: |
          export REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          export IMAGE_NAME=ghcr.io/$REPO_NAME/ninder
          export COMMIT_HASH=$(git rev-parse --short HEAD)
          docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:$COMMIT_HASH .

      - name: Push Docker Image
        run: |
          export REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          export IMAGE_NAME=ghcr.io/$REPO_NAME/ninder
          export COMMIT_HASH=$(git rev-parse --short HEAD)
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$COMMIT_HASH

      - name: Replace variables in docker-stack.yml
        run: |
          sed -i \
            -e "s|\${DATABASE_URL}|${{ secrets.DATABASE_URL }}|g" \
            -e "s|\${FIREBASE_ADMIN_CREDENTIALS}|${{ secrets.FIREBASE_ADMIN_CREDENTIALS }}|g" \
            docker-stack.yml

      - name: Deploy stack to swarm
        uses: kitconcept/docker-stack-deploy@v1.2.0
        with:
          registry: 'ghcr.io'
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          remote_host: ${{ secrets.REMOTE_HOST }}
          remote_user: ${{ secrets.REMOTE_USER }}
          remote_private_key: ${{ secrets.REMOTE_PRIVATE_KEY }}
          stack_file: './docker-stack.yml'
          stack_name: 'ninder'
          env_file: 'dockerenv'
